datasets: 'config/datasets.tsv'


root: 'bids'
work: 'work' 

write_ome_zarr_direct: True #use this to skip writing the final zarr output to work first and copying afterwards -- useful when work is not a fast local disk

#import wildcards:  tilex, tiley, channel, zslice (and prefix - unused)
import_blaze:
  raw_tif_pattern: "{prefix}_Blaze[{tilex} x {tiley}]_C{channel}_xyz-Table Z{zslice}.ome.tif"
  intensity_rescaling: 0.5 #raw images seem to be at the upper end of uint16 (over-saturated) -- causes wrapping issues when adjusting with flatfield correction etc. this rescales the raw data as it imports it..

import_prestitched:
  stitched_tif_glob: "*nm_{stain}/*.tif"
  physical_size_x_um: 1.8
  physical_size_y_um: 1.8
  physical_size_z_um: 4


basic_flatfield_corr:
  max_n_images: 500
  fitting_opts:
    get_darkfield: True
    smoothness_flatfield: 1.0
    smoothness_darkfield: 1.0
    sparse_cost_darkfield: 0.01


bigstitcher:
  calc_pairwise_shifts:
    downsample_in_x: 4
    downsample_in_y: 4
    downsample_in_z: 1
    method: "phase_corr"
    methods:
      phase_corr: "Phase Correlation"
      optical_flow: "Lucas-Kanade" 
  filter_pairwise_shifts:
    enabled: 1
    min_r: 0.7
  global_optimization:
    enabled: 1
    strategy: two_round
    strategies:
      one_round: "One-Round"
      one_round_iterative: "One-Round with iterative dropping of bad links"
      two_round:  "Two-Round using metadata to align unconnected Tiles"
      two_round_iterative: "Two-Round using Metadata to align unconnected Tiles and iterative dropping of bad links"


  fuse_dataset:
    downsampling: 1
    block_size_x: 4096 # for storage
    block_size_y: 4096
    block_size_z: 1
    block_size_factor_x: 2 #e.g. 2 will use 2*block_size for computation
    block_size_factor_y: 2
    block_size_factor_z: 1

ome_zarr:
  desc: stitchedflatcorr
  max_downsampling_layers: 5 # e.g. 4 levels: { 0: orig, 1: ds2, 2: ds4, 3: ds8, 4: ds16}
  rechunk_size: #z, y, x
    - 1 
    - 4096
    - 4096
  scaling_method: 'local_mean' #can be nearest, gaussian, local_mean, zoom (zoom uses spline interp)
 
  omero_metadata:
    channels:
      default_color: 'FFFFFF'
      color_mapping:
        autof: 'FFFFFF'
        abeta: '00FF00'
      defaults:
        active: True
        coefficient: 1.0
        inverted: False
        family: linear
        window: 
          min: 0
          max: 65535
          start: 0
          end: 65535
    defaults:
      rdefs:
        defaultT: 0
        defaultZ: 0
        model: 'color'
      id: 0
      name: spim
      version: "0.4"  
  use_zipstore: False #if True, produce SPIM.ome.zarr.zip instead of SPIM.ome.zarr

nifti:
  levels: #cannot be higher than max_downsampling_layers in ome_zarr
    - 3
    - 4


bids:
  raw:
    Name: Name of the dataset
    BIDSVersion: v1.9.0
    DatasetType: raw
    License: The license for the dataset
    Authors: 
      - Author Name 1
      - Author Name 2
    GeneratedBy:
      - Name: SPIMprep
      - Version: 0.1.0
      - CodeURL: https://github.com/khanlab/SPIMprep
  resampled:
    Name: Downsampled SPIM niftis
    BIDSVersion: v1.9.0
    DatasetType: derived
    Authors: 
      - Author Name 1
      - Author Name 2
    GeneratedBy:
      - Name: SPIMprep
      - Version: 0.1.0
      - CodeURL: https://github.com/khanlab/SPIMprep
  readme_md: resources/bids_template_files/README.md
  samples_json: resources/bids_template_files/samples.json
    
report:
  create_report: True
  flatfield_corrected:
    slice_start: 0
    slice_step: 50 # Shows every nth slice
    colour_map: viridis
  whole_slice_viewer:
    slice_start: 0
    slice_step: 50
    colour_map: viridis


containers:
  spimprep: 'docker://khanlab/spimprep-deps:main'

